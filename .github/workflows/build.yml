---
name: build

on: [push, pull_request]

jobs:
  gitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3
      - name: Install Poetry
        run: pipx install poetry
      - name: Install dependencies
        run: poetry install -v
      - name: Run gitlint
        run: poetry run gitlint

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3
      - name: Install Poetry
        run: pipx install poetry
      - name: Install dependencies
        run: poetry install -v
      - name: Cache pre-commit hooks
        id: cache-pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: python-${{ steps.setup-python.outputs.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: python-${{ steps.setup-python.outputs.python-version }}-pre-commit-
      - name: Prune pre-commit hooks
        if: steps.cache-pre-commit.outputs.cache-hit != 'true'
        run: poetry run pre-commit gc
      - name: Run pre-commit
        run: poetry run pre-commit run --all-files --color=always --show-diff-on-failure

  super-linter:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run super-linter
        uses: github/super-linter@v4.9.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_DOCKERFILE_HADOLINT: false
          VALIDATE_GITHUB_ACTIONS: false
          VALIDATE_MARKDOWN: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_YAML: false

  pytest:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pipx install poetry
      - name: Install dependencies
        run: poetry install -v
      - name: Run pytest
        run: poetry run pytest --color=yes --cov-report=term --cov-report=xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.0

  release:
    if: github.ref == 'refs/heads/master'
    needs: [gitlint, pre-commit, super-linter, pytest]
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run Python Semantic Release
        uses: relekang/python-semantic-release@v7.30.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
