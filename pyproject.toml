[tool.poetry]
name = "pip-autocompile"
version = "0.7.4"
description = "Automate pip-compile for multiple environments."
license = "MIT"
authors = ["Konstantinos Smanis <konstantinos.smanis@gmail.com>"]
readme = "README.md"
repository = "https://github.com/KSmanis/pip-autocompile"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Build Tools"
]
packages = [
    { include = "pipautocompile", from = "src" }
]
include = [
    { path = "examples", format = "sdist" },
    { path = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
click = "^8"
pygit2 = "^1.9.0"
python-on-whales = "^0.40.0"

[tool.poetry.dev-dependencies]
# lint
gitlint = "^0.17.0"
pre-commit = "^2.16.0"
# test
pip-tools = "^6.6.2"
pytest-cov = "^4.0.0"
# types
mypy = "^0.981"

[tool.poetry.scripts]
pip-autocompile = "pipautocompile.main:cli"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_empty = true

[tool.isort]
profile = "black"
add_imports = ["from __future__ import annotations"]
append_only = true
force_single_line = true

[tool.mypy]
disallow_any_unimported = true
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = "pygit2"
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov=src --cov-branch"
testpaths = ["tests"]

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
commit_subject = "build: release v{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
