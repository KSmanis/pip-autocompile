[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "pragma: no cover",
]
show_missing = true
skip_empty = true

[tool.coverage.run]
relative_files = true

[tool.isort]
add_imports = ["from __future__ import annotations"]
append_only = true
force_single_line = true
profile = "black"

[tool.mypy]
disallow_any_unimported = true
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "pygit2"

[tool.poetry]
authors = ["Konstantinos Smanis <konstantinos.smanis@gmail.com>"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Build Tools",
]
description = "Automate pip-compile for multiple environments."
include = [
  {format = "sdist", path = "examples"},
  {format = "sdist", path = "tests"},
]
license = "MIT"
name = "pip-autocompile"
packages = [
  {from = "src", include = "pipautocompile"},
]
readme = "README.md"
repository = "https://github.com/KSmanis/pip-autocompile"
version = "0.7.8"

[tool.poetry.dependencies]
click = "^8.1.3"
pygit2 = [
  {python = "^3.8", version = "^1.11.1"},
  {python = "~3.7", version = "~1.10.1"},
]
python = "^3.7"
python-on-whales = "^0.62.0"

[tool.poetry.group.lint.dependencies]
mypy = "^1.3.0"
pre-commit = [
  {python = "^3.8", version = "^3.0.0"},
  {python = "~3.7", version = "~2.21.0"},
]

[tool.poetry.group.test.dependencies]
pip-tools = "^6.13.0"
pytest-cov = "^4.1.0"

[tool.poetry.scripts]
pip-autocompile = "pipautocompile.main:cli"

[tool.pytest.ini_options]
addopts = "--cov=src --cov-branch"
testpaths = ["tests"]

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
commit_subject = "build: release v{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.tomlsort]
all = true
spaces_before_inline_comment = 2
trailing_comma_inline_array = true
